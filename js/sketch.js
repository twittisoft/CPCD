// Generated by CoffeeScript 2.5.1
var COLORS, ballClicked, balls, clicked, createColors, draw, keyPressed, level, mousePressed, overlap, passive, pattern, radie, range, reset, setup;

balls = [];

radie = 100;

range = _.range;

//röd blå grön gul svart vit cyan magenta
//COLORS = "#f008 #00f8 #0f08 #ff08 #0008 #fff8 #0ff8 #f0f8".split " "
COLORS = [];

clicked = [];

level = 0;

ballClicked = 0;

passive = 0;

pattern = "0f";

overlap = function(x1, y1, x2, y2) {
  var result;
  result = dist(x1, y1, x2, y2) < radie * 1.5;
  if (result) {
    console.log(dist(x1, y1, x2, y2), radie, x1, y1, x2, y2);
  }
  return result;
};

createColors = function(s) {
  var b, g, k, l, len, len1, len2, m, r, result;
  pattern = s;
  result = [];
  for (k = 0, len = s.length; k < len; k++) {
    r = s[k];
    for (l = 0, len1 = s.length; l < len1; l++) {
      g = s[l];
      for (m = 0, len2 = s.length; m < len2; m++) {
        b = s[m];
        result.push("#" + r + g + b + "8");
      }
    }
  }
  return _.shuffle(result);
};

reset = function(delta) {
  var antal, ball, count, i, j, k, len, ref, results, x, y;
  //0123456789abcdef
  //COLORS = createColors	"cdef"
  //console.log delta
  //console.log COLORS 
  level += delta;
  if (level === 0) {
    level = 1;
  }
  radie = windowHeight / 2 / (level + 1) ** 0.4;
  balls = [];
  clicked = [];
  passive = 0;
  ref = range(level);
  results = [];
  for (k = 0, len = ref.length; k < len; k++) {
    i = ref[k];
    results.push((function() {
      var l, len1, len2, m, ref1, results1;
      ref1 = range(2);
      results1 = [];
      for (l = 0, len1 = ref1.length; l < len1; l++) {
        j = ref1[l];
        antal = 0;
        while (true) {
          antal++;
          if (antal > 100) {
            break;
          }
          x = int(random(width));
          y = int(random(height));
          count = 0;
          for (m = 0, len2 = balls.length; m < len2; m++) {
            ball = balls[m];
            if (overlap(x, y, ball.x, ball.y)) {
              count++;
            }
          }
          if (count === 0) {
            break;
          }
        }
        
        //console.log 'balls',balls
        //console.log 'count',count,antal
        results1.push(balls.push({
          x: x,
          y: y,
          rgb: COLORS[i],
          passive: true
        }));
      }
      return results1;
    })());
  }
  return results;
};

setup = function() {
  createCanvas(windowWidth, windowHeight);
  radie = windowHeight / 4;
  //params = getParameters()
  //console.log params
  //if params == 0
  pattern = '05af';
  //else
  //	pattern = params.pattern
  COLORS = createColors(pattern);
  return reset(1);
};

//console.log getParameters()
draw = function() {
  var ball, k, len, results;
  background(255);
  fill(240);
  textSize(height / 5);
  textAlign(CENTER, CENTER);
  text(level, width / 2, height / 2);
  text(pattern, width / 2, 300);
  textSize(height / 50);
  fill(0);
  text('0123456789abcdef', width - 100, 50);
  results = [];
  for (k = 0, len = balls.length; k < len; k++) {
    ball = balls[k];
    if (ball.passive) {
      fill(ball.rgb);
      results.push(ellipse(ball.x, ball.y, radie * 2));
    } else {
      results.push(void 0);
    }
  }
  return results;
};

// sc 0
// sw 5
// point ball.x,ball.y
keyPressed = function() {
  //console.log key, keyCode
  if (key === "2") {
    COLORS = createColors("0f");
    reset(0);
  }
  if (key === "3") {
    COLORS = createColors("08f");
    reset(0);
  }
  if (key === "4") {
    COLORS = createColors("05af");
    reset(0);
  }
  if (key === "5") {
    COLORS = createColors("048bf");
    return reset(0);
  }
};

mousePressed = function() {
  var b, ball, k, len;
  //console.log mouseX, mouseY
  ballClicked = 0;
//passive=0
  for (k = 0, len = balls.length; k < len; k++) {
    ball = balls[k];
    if (dist(ball.x, ball.y, mouseX, mouseY) < radie && ball.passive === true) {
      ballClicked++;
      b = ball;
    }
  }
  if (ballClicked !== 1) {
    return reset(-1);
  }
  passive++;
  // console.log "inside"
  clicked.push(b);
  
  // console.log "clicked.length",clicked.length
  b.passive = false;
  if (clicked.length !== 2) {
    return;
  }
  if (clicked[1].rgb !== clicked[0].rgb) {
    return reset(-1);
  } else {
    clicked = [];
  }
  if (passive === balls.length) {
    return reset(1);
  }
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=c:\Users\twittisoft\CPCD\coffee\sketch.coffee