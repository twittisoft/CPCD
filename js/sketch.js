// Generated by CoffeeScript 2.5.1
var COLORS, ballClicked, balls, bgValue, clicked, createColors, draw, keyPressed, level, mousePressed, overlap, passive, pattern, radie, range, reset, ring, setup, tjocklek;

balls = [];

radie = 100;

range = _.range;

//röd blå grön gul svart vit cyan magenta
//COLORS = "#f008 #00f8 #0f08 #ff08 #0008 #fff8 #0ff8 #f0f8".split " "
COLORS = [];

clicked = [];

level = 0;

ballClicked = 0;

passive = 0;

pattern = "0f";

bgValue = 0;

ring = false;

tjocklek = 10;

overlap = function(x1, y1, x2, y2) {
  var result;
  result = dist(x1, y1, x2, y2) < radie;
  if (result) {
    console.log(dist(x1, y1, x2, y2), radie, x1, y1, x2, y2);
  }
  return result;
};

createColors = function(s) {
  var b, g, k, l, len, len1, len2, m, r, result;
  pattern = s;
  result = [];
  for (k = 0, len = s.length; k < len; k++) {
    r = s[k];
    for (l = 0, len1 = s.length; l < len1; l++) {
      g = s[l];
      for (m = 0, len2 = s.length; m < len2; m++) {
        b = s[m];
        result.push("#" + r + g + b + "8");
      }
    }
  }
  return _.shuffle(result);
};

reset = function(delta) {
  var antal, ball, count, i, j, k, len, ref, results, x, y;
  //0123456789abcdef
  //COLORS = createColors	"cdef"
  //console.log delta
  //console.log COLORS 
  level += delta;
  if (level === 0) {
    level = 1;
  }
  radie = windowHeight / 2 / (level + 1) ** 0.4;
  balls = [];
  clicked = [];
  passive = 0;
  ref = range(level);
  results = [];
  for (k = 0, len = ref.length; k < len; k++) {
    i = ref[k];
    results.push((function() {
      var l, len1, len2, m, ref1, results1;
      ref1 = range(2);
      results1 = [];
      for (l = 0, len1 = ref1.length; l < len1; l++) {
        j = ref1[l];
        antal = 0;
        while (true) {
          antal++;
          if (antal > 100) {
            break;
          }
          x = int(random(width));
          y = int(random(height));
          count = 0;
          for (m = 0, len2 = balls.length; m < len2; m++) {
            ball = balls[m];
            if (overlap(x, y, ball.x, ball.y)) {
              count++;
            }
          }
          if (count === 0) {
            break;
          }
        }
        
        //console.log 'balls',balls
        //console.log 'count',count,antal
        results1.push(balls.push({
          x: x,
          y: y,
          rgb: COLORS[i],
          passive: true
        }));
      }
      return results1;
    })());
  }
  return results;
};

setup = function() {
  var params;
  createCanvas(windowWidth, windowHeight);
  radie = windowHeight / 4;
  params = getParameters();
  console.log(params);
  if (_.size(params) === 0) {
    pattern = '05af';
  } else {
    pattern = params.pattern;
  }
  COLORS = createColors(pattern);
  return reset(1);
};

//console.log getParameters()
draw = function() {
  var ball, k, len, results;
  background(bgValue);
  fill(255 - bgValue);
  textSize(height / 5);
  textAlign(CENTER, CENTER);
  text(level, width / 2, height / 2);
  text(pattern, width / 2, 300);
  textSize(height / 50);
  fill(255 - bgValue);
  text('0123456789abcdef', width - 100, 50);
  results = [];
  for (k = 0, len = balls.length; k < len; k++) {
    ball = balls[k];
    if (ball.passive) {
      push();
      if (ring) {
        stroke(255 - bgValue);
      } else {
        noStroke();
      }
      strokeWeight(tjocklek);
      fill(ball.rgb);
      ellipse(ball.x, ball.y, radie * 2);
      // sc 0
      // sw 5
      // point ball.x,ball.y
      results.push(pop());
    } else {
      results.push(void 0);
    }
  }
  return results;
};

keyPressed = function() {
  console.log(key, keyCode);
  if (key === " ") {
    bgValue = 255 - bgValue;
  }
  if (key === "r") {
    ring = !ring;
  }
  if (key === "1") {
    tjocklek--;
  }
  if (key === "2") {
    return tjocklek++;
  }
};

mousePressed = function() {
  var b, ball, k, len;
  //console.log mouseX, mouseY
  ballClicked = 0;
//passive=0
  for (k = 0, len = balls.length; k < len; k++) {
    ball = balls[k];
    if (dist(ball.x, ball.y, mouseX, mouseY) < radie && ball.passive === true) {
      ballClicked++;
      b = ball;
    }
  }
  if (ballClicked !== 1) {
    return reset(-1);
  }
  passive++;
  // console.log "inside"
  clicked.push(b);
  
  // console.log "clicked.length",clicked.length
  b.passive = false;
  if (clicked.length !== 2) {
    return;
  }
  if (clicked[1].rgb !== clicked[0].rgb) {
    return reset(-1);
  } else {
    clicked = [];
  }
  if (passive === balls.length) {
    return reset(1);
  }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXHNrZXRjaC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsTUFBQSxFQUFBLFdBQUEsRUFBQSxLQUFBLEVBQUEsT0FBQSxFQUFBLE9BQUEsRUFBQSxZQUFBLEVBQUEsSUFBQSxFQUFBLFVBQUEsRUFBQSxLQUFBLEVBQUEsWUFBQSxFQUFBLE9BQUEsRUFBQSxPQUFBLEVBQUEsT0FBQSxFQUFBLEtBQUEsRUFBQSxLQUFBLEVBQUEsS0FBQSxFQUFBLElBQUEsRUFBQSxLQUFBLEVBQUE7O0FBQUEsS0FBQSxHQUFROztBQUNSLEtBQUEsR0FBUTs7QUFDUixLQUFBLEdBQVEsQ0FBQyxDQUFDLE1BRlY7Ozs7QUFLQSxNQUFBLEdBQVM7O0FBQ1QsT0FBQSxHQUFROztBQUNSLEtBQUEsR0FBUTs7QUFDUixXQUFBLEdBQWM7O0FBQ2QsT0FBQSxHQUFVOztBQUNWLE9BQUEsR0FBVTs7QUFDVixPQUFBLEdBQVU7O0FBQ1YsSUFBQSxHQUFPOztBQUNQLFFBQUEsR0FBVzs7QUFFWCxPQUFBLEdBQVUsUUFBQSxDQUFDLEVBQUQsRUFBSSxFQUFKLEVBQU8sRUFBUCxFQUFVLEVBQVYsQ0FBQTtBQUNWLE1BQUE7RUFBQyxNQUFBLEdBQVMsSUFBQSxDQUFLLEVBQUwsRUFBUSxFQUFSLEVBQVcsRUFBWCxFQUFjLEVBQWQsQ0FBQSxHQUFvQjtFQUM3QixJQUFHLE1BQUg7SUFDQyxPQUFPLENBQUMsR0FBUixDQUFZLElBQUEsQ0FBSyxFQUFMLEVBQVEsRUFBUixFQUFXLEVBQVgsRUFBYyxFQUFkLENBQVosRUFBK0IsS0FBL0IsRUFBc0MsRUFBdEMsRUFBeUMsRUFBekMsRUFBNEMsRUFBNUMsRUFBK0MsRUFBL0MsRUFERDs7U0FFQTtBQUpTOztBQU1WLFlBQUEsR0FBZSxRQUFBLENBQUMsQ0FBRCxDQUFBO0FBQ2YsTUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxD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QUE1QixDQUFBLEdBQW9DLEtBQXBDLElBQThDLElBQUksQ0FBQyxPQUFMLEtBQWMsSUFBL0Q7TUFFQyxXQUFBO01BQ0EsQ0FBQSxHQUFFLEtBSEg7O0VBREQ7RUFLQSxJQUFHLFdBQUEsS0FBYSxDQUFoQjtBQUF1QixXQUFPLEtBQUEsQ0FBTSxDQUFDLENBQVAsRUFBOUI7O0VBQ0EsT0FBQSxHQVREOztFQVdDLE9BQU8sQ0FBQyxJQUFSLENBQWEsQ0FBYixFQVhEOzs7RUFhQyxDQUFDLENBQUMsT0FBRixHQUFVO0VBQ1YsSUFBRyxPQUFPLENBQUMsTUFBUixLQUFnQixDQUFuQjtBQUEwQixXQUExQjs7RUFDQSxJQUFHLE9BQU8sQ0FBQyxDQUFELENBQUcsQ0FBQyxHQUFYLEtBQWdCLE9BQU8sQ0FBQyxDQUFELENBQUcsQ0FBQyxHQUE5QjtBQUF1QyxXQUFPLEtBQUEsQ0FBTSxDQUFDLENBQVAsRUFBOUM7R0FBQSxNQUFBO0lBQTRELE9BQUEsR0FBVSxHQUF0RTs7RUFDQSxJQUFHLE9BQUEsS0FBUyxLQUFLLENBQUMsTUFBbEI7QUFBOEIsV0FBTyxLQUFBLENBQU0sQ0FBTixFQUFyQzs7QUFqQmMiLCJzb3VyY2VzQ29udGVudCI6WyJiYWxscyA9IFtdXHJcbnJhZGllID0gMTAwXHJcbnJhbmdlID0gXy5yYW5nZVxyXG4jcsO2ZCBibMOlIGdyw7ZuIGd1bCBzdmFydCB2aXQgY3lhbiBtYWdlbnRhXHJcbiNDT0xPUlMgPSBcIiNmMDA4ICMwMGY4ICMwZjA4ICNmZjA4ICMwMDA4ICNmZmY4ICMwZmY4ICNmMGY4XCIuc3BsaXQgXCIgXCJcclxuQ09MT1JTID0gW11cclxuY2xpY2tlZD1bXVxyXG5sZXZlbCA9IDBcclxuYmFsbENsaWNrZWQgPSAwXHJcbnBhc3NpdmUgPSAwXHJcbnBhdHRlcm4gPSBcIjBmXCJcclxuYmdWYWx1ZSA9IDBcclxucmluZyA9IGZhbHNlXHJcbnRqb2NrbGVrID0gMTBcclxuXHJcbm92ZXJsYXAgPSAoeDEseTEseDIseTIpIC0+IFxyXG5cdHJlc3VsdCA9IGRpc3QoeDEseTEseDIseTIpIDwgcmFkaWUgXHJcblx0aWYgcmVzdWx0XHJcblx0XHRjb25zb2xlLmxvZyBkaXN0KHgxLHkxLHgyLHkyKSwgcmFkaWUsIHgxLHkxLHgyLHkyIFxyXG5cdHJlc3VsdCBcclxuXHJcbmNyZWF0ZUNvbG9ycyA9IChzKS0+XHJcblx0cGF0dGVybiA9IHNcclxuXHRyZXN1bHQgPSBbXVxyXG5cdGZvciByIGluIHNcclxuXHRcdGZvciBnIGluIHNcclxuXHRcdFx0Zm9yIGIgaW4gc1xyXG5cdFx0XHRcdHJlc3VsdC5wdXNoIFwiI1wiK3IrZytiK1wiOFwiXHJcblx0Xy5zaHVmZmxlIHJlc3VsdFxyXG5cclxucmVzZXQgPSAoZGVsdGEpLT5cclxuIzAxMjM0NTY3ODlhYmNkZWZcclxuXHQjQ09MT1JTID0gY3JlYXRlQ29sb3JzXHRcImNkZWZcIlxyXG5cdCNjb25zb2xlLmxvZyBkZWx0YVxyXG5cdCNjb25zb2xlLmxvZyBDT0xPUlMgXHJcblx0bGV2ZWwrPWRlbHRhXHJcblx0aWYgbGV2ZWw9PTAgdGhlbiBsZXZlbD0xXHJcblx0cmFkaWU9d2luZG93SGVpZ2h0LzIvKGxldmVsKzEpKiowLjRcclxuXHRiYWxscyA9IFtdXHJcblx0Y2xpY2tlZCA9IFtdXHJcblx0cGFzc2l2ZSA9IDBcclxuXHRmb3IgaSBpbiByYW5nZSBsZXZlbFxyXG5cdFx0Zm9yIGogaW4gcmFuZ2UgMlxyXG5cdFx0XHRhbnRhbCA9IDBcclxuXHRcdFx0bG9vcFxyXG5cdFx0XHRcdGFudGFsKytcclxuXHRcdFx0XHRpZiBhbnRhbCA+IDEwMCB0aGVuIGJyZWFrIFxyXG5cdFx0XHRcdHggPSBpbnQgcmFuZG9tIHdpZHRoXHJcblx0XHRcdFx0eSA9IGludCByYW5kb20gaGVpZ2h0XHJcblxyXG5cdFx0XHRcdGNvdW50ID0gMFxyXG5cdFx0XHRcdGZvciBiYWxsIGluIGJhbGxzXHJcblx0XHRcdFx0XHRpZiBvdmVybGFwIHgseSxiYWxsLngsYmFsbC55IHRoZW4gY291bnQrK1xyXG5cdFx0XHRcdGlmIGNvdW50ID09IDAgdGhlbiBicmVha1x0XHJcblxyXG5cdFx0XHQjY29uc29sZS5sb2cgJ2JhbGxzJyxiYWxsc1xyXG5cdFx0XHQjY29uc29sZS5sb2cgJ2NvdW50Jyxjb3VudCxhbnRhbFxyXG5cdFx0XHRiYWxscy5wdXNoIHt4OngseTp5LHJnYjpDT0xPUlNbaV0scGFzc2l2ZTp0cnVlfVxyXG5cclxuc2V0dXAgPSAtPlxyXG5cdGNyZWF0ZUNhbnZhcyB3aW5kb3dXaWR0aCwgd2luZG93SGVpZ2h0XHJcblx0cmFkaWUgPSB3aW5kb3dIZWlnaHQvNFxyXG5cdHBhcmFtcyA9IGdldFBhcmFtZXRlcnMoKVxyXG5cdGNvbnNvbGUubG9nIHBhcmFtc1xyXG5cdGlmIF8uc2l6ZShwYXJhbXMpID09IDBcclxuXHRcdHBhdHRlcm4gPSAnMDVhZidcclxuXHRlbHNlXHJcblx0XHRwYXR0ZXJuID0gcGFyYW1zLnBhdHRlcm5cclxuXHRDT0xPUlM9Y3JlYXRlQ29sb3JzIHBhdHRlcm5cclxuXHRyZXNldCAxXHJcblx0I2NvbnNvbGUubG9nIGdldFBhcmFtZXRlcnMoKVxyXG5cclxuXHJcbmRyYXcgPSAtPlxyXG5cdGJhY2tncm91bmQgYmdWYWx1ZVxyXG5cdGZpbGwgMjU1LWJnVmFsdWVcclxuXHR0ZXh0U2l6ZSBoZWlnaHQvNVxyXG5cdHRleHRBbGlnbiBDRU5URVIsQ0VOVEVSXHJcblx0dGV4dCBsZXZlbCx3aWR0aC8yLGhlaWdodC8yXHJcblx0dGV4dCBwYXR0ZXJuLHdpZHRoLzIsMzAwXHJcblx0dGV4dFNpemUgaGVpZ2h0LzUwXHJcblx0ZmlsbCAyNTUtYmdWYWx1ZVxyXG5cdHRleHQgJzAxMjM0NTY3ODlhYmNkZWYnLHdpZHRoLTEwMCw1MFxyXG5cdGZvciBiYWxsIGluIGJhbGxzXHJcblx0XHRpZiBiYWxsLnBhc3NpdmVcclxuXHRcdFx0cHVzaCgpXHJcblx0XHRcdGlmIHJpbmcgXHJcblx0XHRcdFx0c3Ryb2tlIDI1NS1iZ1ZhbHVlXHJcblx0XHRcdGVsc2VcclxuXHRcdFx0XHRub1N0cm9rZSgpXHJcblx0XHRcdHN0cm9rZVdlaWdodCB0am9ja2xla1xyXG5cdFx0XHRmaWxsIGJhbGwucmdiIFxyXG5cdFx0XHRlbGxpcHNlIGJhbGwueCxiYWxsLnkscmFkaWUqMlxyXG5cdFx0XHQjIHNjIDBcclxuXHRcdFx0IyBzdyA1XHJcblx0XHRcdCMgcG9pbnQgYmFsbC54LGJhbGwueVxyXG5cdFx0XHRwb3AoKVxyXG5cclxuXHJcbmtleVByZXNzZWQgPSAtPlxyXG5cdGNvbnNvbGUubG9nIGtleSwga2V5Q29kZVxyXG5cdGlmIGtleT09IFwiIFwiXHJcblx0XHRiZ1ZhbHVlPTI1NS1iZ1ZhbHVlXHJcblx0aWYga2V5PT0gXCJyXCJcclxuXHRcdHJpbmc9bm90IHJpbmdcclxuXHRpZiBrZXk9PSBcIjFcIiB0aGVuIHRqb2NrbGVrLS1cclxuXHRpZiBrZXk9PSBcIjJcIiB0aGVuIHRqb2NrbGVrKytcclxuXHJcblxyXG5cclxuXHJcbm1vdXNlUHJlc3NlZCA9IC0+XHJcblx0I2NvbnNvbGUubG9nIG1vdXNlWCwgbW91c2VZXHJcblx0YmFsbENsaWNrZWQ9MFxyXG5cdCNwYXNzaXZlPTBcclxuXHRmb3IgYmFsbCBpbiBiYWxscyBcclxuXHRcdGlmIGRpc3QoYmFsbC54LGJhbGwueSwgbW91c2VYLCBtb3VzZVkpPHJhZGllIGFuZCBiYWxsLnBhc3NpdmU9PXRydWVcclxuXHJcblx0XHRcdGJhbGxDbGlja2VkKytcclxuXHRcdFx0Yj1iYWxsXHJcblx0aWYgYmFsbENsaWNrZWQhPTEgdGhlbiByZXR1cm4gcmVzZXQgLTFcclxuXHRwYXNzaXZlKytcclxuXHQjIGNvbnNvbGUubG9nIFwiaW5zaWRlXCJcclxuXHRjbGlja2VkLnB1c2ggYiBcclxuXHQjIGNvbnNvbGUubG9nIFwiY2xpY2tlZC5sZW5ndGhcIixjbGlja2VkLmxlbmd0aFxyXG5cdGIucGFzc2l2ZT1mYWxzZVxyXG5cdGlmIGNsaWNrZWQubGVuZ3RoIT0yIHRoZW4gcmV0dXJuXHJcblx0aWYgY2xpY2tlZFsxXS5yZ2IhPWNsaWNrZWRbMF0ucmdiIHRoZW4gcmV0dXJuIHJlc2V0IC0xIGVsc2UgY2xpY2tlZCA9IFtdXHJcblx0aWYgcGFzc2l2ZT09YmFsbHMubGVuZ3RoIHRoZW4gcmV0dXJuIHJlc2V0IDEiXX0=
//# sourceURL=c:\Users\twittisoft\CPCD\coffee\sketch.coffee